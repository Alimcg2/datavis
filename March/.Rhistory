data2 <- data %>%
group_by(Longitude) %>%
summarise(Latitude, Country, n())
data <- read.csv("ipLatLon")
data2 <- data %>%
group_by(Longitude) %>%
summarise(Latitude, Country, n())
"ipLatLon"
read.csv("ipLatLon")
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
data$Longitude <- as.numeric(data$Longitude)
data2 <- data %>%
group_by(Longitude) %>%
summarise(Latitude, Country, n())
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(n())
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
p2 <- ggplot() + geom_contour(data = data, mapping =aes(x = Longitude, y = Latitude, z = Num))
p2
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
p2 <- ggplot() + geom_contour(data = data2, mapping =aes(x = Longitude, y = Latitude, z = Num))
p2
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p <- p + geom_segment(data = data, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.1)
p <- p + geom_point(data = data, mapping = aes(x = Longitude, y = Latitude))
ggplotly(p)
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p <- p + geom_segment(data = data, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.1)
p <- p + geom_point(data = data, mapping = aes(x = Longitude, y = Latitude))
ggplotly(p)
data$Latitude
View(map)
View(map)
View(data2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.1)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude))
ggplotly(p2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.1)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), alpha=.5)
ggplotly(p2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num, color = "red"), alpha=.5)
ggplotly(p2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num, color = "yellow"))
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
ggplotly(p2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "yellow")
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
ggplotly(p2)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "red")
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
ggplotly(p2)
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
p2$data$text <- paste(data2$City, data2$Num)
knitr::opts_chunk$set(echo = TRUE)
p2$data$text <- paste(marches$City, marches$People)
```{r echo=FALSE, warning=FALSE, message=FALSE}
setwd("~/Documents/datavis/March")
library(plotly)
library(ggplot2)
library(maps)
library(dplyr)
library(tidyr)
library(RColorBrewer)
marches <- read.csv('marches.csv')
marches <- marches %>%
separate(location, c("City", "State"), ", ")
marches <- marches %>%
filter(State != "AK") %>%
filter(State != "HI") %>%
filter(State != "Maui")
marches <- marches %>%
filter(Latitude > 25) %>%
filter(mean.high.low != "") %>%
filter(mean.high.low != 0)
colnames(marches)[5] <- "People"
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="white", fill="white" )
p <- p + geom_point( data=marches, aes(x=Longitude, y=Latitude, size = People, color=People)) + scale_size_continuous(range = c(2,20))
#sets scale colors
p <- p + scale_color_gradient(low='#082554', high='#f75d42')
#gets rid of lines/axis and background
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
library(plotly)
library(ggplot2)
library(maps)
library(dplyr)
library(tidyr)
library(RColorBrewer)
marches <- read.csv('marches.csv')
marches <- marches %>%
separate(location, c("City", "State"), ", ")
marches <- marches %>%
filter(State != "AK") %>%
filter(State != "HI") %>%
filter(State != "Maui")
marches <- marches %>%
filter(Latitude > 25) %>%
filter(mean.high.low != "") %>%
filter(mean.high.low != 0)
colnames(marches)[5] <- "People"
library(maps)
election <- read.csv("election.csv")
election <- election %>%
mutate_each(funs(tolower))
county_data <- map_data("county")
colnames(county_data)[6] <- "Place"
colnames(election)[4] <- "region"
election$Clinton <- as.numeric(election$Clinton)
election$Trump <- as.numeric(election$Trump)
election <- left_join(election, county_data, by = c("Place" = "Place", "region" = "region"))
clinton <- election %>%
filter(Clinton > Trump)
trump <- election %>%
filter(Trump > Clinton)
p2 <- ggplot() + geom_polygon(data = clinton, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
p2 <- p2 + geom_polygon(data = trump, mapping = aes(x = long, y = lat, group = group), fill = "#e8c2b0") + coord_fixed(1.3)
p2 <- p2 + geom_point( data=marches, aes(label=City, x=Longitude, y=Latitude, size = People, color=People), alpha=.3) +
scale_size_continuous(range = c(2,20))
#sets scale colors
p2 <- p2 + scale_color_gradient(low='#082554', high='#f75d42')
p2 <- ggplotly(p2)
p2$data$text <- paste(marches$City, marches$People)
p2
p2$x$data[[1]]$text <- paste(marches$City, marches$People)
p2
p2$data[[1]]$text <- paste(marches$City, marches$People)
p2
ggplotly(p2, tooltip = c(marches$City, marches$People))
library(plotly)
library(ggplot2)
library(maps)
library(dplyr)
library(tidyr)
library(RColorBrewer)
marches <- read.csv('marches.csv')
marches <- marches %>%
separate(location, c("City", "State"), ", ")
marches <- marches %>%
filter(State != "AK") %>%
filter(State != "HI") %>%
filter(State != "Maui")
marches <- marches %>%
filter(Latitude > 25) %>%
filter(mean.high.low != "") %>%
filter(mean.high.low != 0)
colnames(marches)[5] <- "People"
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="#f75d42", fill="white" )
p <- p + geom_point( data=marches, aes(x=Longitude, y=Latitude, size = People, color=People)) + scale_size_continuous(range = c(2,20))
#sets scale colors
p <- p + scale_color_gradient(low='#082554', high='#f75d42')
#gets rid of lines/axis and background
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
data$Longitude <- as.numeric(data$Longitude)
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p <- p + geom_segment(data = data, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.1)
p <- p + geom_point(data = data, mapping = aes(x = Longitude, y = Latitude))
ggplotly(p)
data2 <- data %>%
group_by(Longitude, Latitude, Country) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "red")
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
ggplotly(p2)
ggplotly(p2, tooltip = c("Num"))
ggplotly(p2, tooltip = c("Num", "Country", "City"))
ggplotly(p2, tooltip = c("Num", "Country"))
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
map <- map_data('world')
p2 <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p2 <- p2 + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "red")
p2 <- p2 + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
ggplotly(p2, tooltip = c("Num", "Country"))
library(maps)
library(ggplot2)
library(dplyr)
library(plotly)
data <- read.csv("ipLatLon")
data$Latitude <- as.numeric(data$Latitude)
data$Longitude <- as.numeric(data$Longitude)
map <- map_data('world')
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "red")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p, tooltip = c("Num", "Country"))
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#b0c5e8", colour = "white") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "red")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p, tooltip = c("Num", "Country"))
map <- map_data('world')
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#6c8c55") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "#558c84")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p, tooltip = c("Num", "Country"))
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), color = "#7f7f7f", alpha=.3)
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#558c84") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "#8c5b55")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), color = "#7f7f7f", alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p, tooltip = c("Num", "Country"))
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#558c84") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num), color = "#8c5b55")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), color = "#4f4f4f", alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p, tooltip = c("Num", "Country"))
data3 <- data %>%
group_by(Country)
data3 <- data %>%
group_by(Country) %>%
summarise(Num = n())
View(data3)
data3Clean <- data3 %>%
filter(Num > 20)
View(data3Clean)
p2 <- ggplot() + geom_bar(data = data3Clean, mapping = (x = Country, y = Num))
p2 <- ggplot() + geom_bar(data = data3Clean, mapping = (x = Country y = Num))
p2 <- ggplot() + geom_bar(data = data3Clean, mapping = aes(x = Country, y = Num))
p2
p2 <- ggplot() + geom_bar(data = data3Clean, mapping = aes(y = Country, x = Num))
p2
p2 <- ggplot(data3Clean, aes(factor(Country))) + geom_bar()
p2
p2 <- ggplot(Data3, aes(factor(Country))) + geom_bar()
p2 <- ggplot(data3, aes(factor(Country))) + geom_bar()
p2
data3 <- data %>%
group_by(Country) %>%
summarise(Num = n())
data3Clean <- data3 %>%
filter(Num > 20)
View(data3)
p2 <- ggplot(data3Clean, aes(factor(Country))) + geom_bar()
p2
p2 <- ggplot(data3Clean, aes(x=Country, y = Num) + geom_bar()
p2 <- ggplot(data3Clean, aes(x=Country, y = Num)) + geom_bar()
data3 <- data %>%
group_by(Country) %>%
summarise(Num = n())
data3Clean <- data3 %>%
filter(Num > 20)
p2 <- ggplot(data3Clean, aes(x = Country, y = Num)) + geom_bar()
p2
p2 <- ggplot(data3Clean, aes(x = Country, y = Num)) + geom_bar(stat="identity")
p2
p2 <- ggplot(data3Clean, aes(x = Country, y = Num)) + geom_bar(stat="identity")
p2 <- p2 + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p2)
ggplotly(p, tooltip = c("Country"))
map <- map_data('world')
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#558c84") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num, color = Country), color = "#8c5b55")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), color = "#4f4f4f", alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
map <- map_data('world')
data2 <- data %>%
group_by(City, Country, Longitude, Latitude) %>%
summarise(Num = n())
map <- map_data('world')
p <- ggplot() + geom_polygon(data = map, mapping = aes(x = long, y = lat, group = group), fill = "#558c84") + coord_fixed(1.3)
p <- p + geom_point(data = data2, mapping = aes(x = Longitude, y = Latitude, size = Num, colors = Country), color = "#8c5b55")
p <- p + geom_segment(data = data2, mapping = aes(x = -122.3321, y = 47.6062, xend = Longitude, yend = Latitude), color = "#4f4f4f", alpha=.3)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
title = element_blank(),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
p <- p + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "black"),
axis.line = element_blank(),
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position ="none")
ggplotly(p)
